apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongo-express
      name: mongo-express
    spec:
      ports:
        - name: "9091"
          port: 9091
          targetPort: 8081
      selector:
        io.kompose.service: mongo-express
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seq-logger
      name: seq-logger
    spec:
      ports:
        - name: "5341"
          port: 5341
          targetPort: 80
      selector:
        io.kompose.service: seq-logger
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web-api
      name: web-api
    spec:
      ports:
        - name: "9090"
          port: 9090
          targetPort: 9090
      selector:
        io.kompose.service: web-api
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web-ui
      name: web-ui
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 80
      selector:
        io.kompose.service: web-ui
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
      name: mongo
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongo
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: mongo
        spec:
          containers:
            - image: mongo:4
              name: mongo
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: mongo-data
          restartPolicy: Always
          volumes:
            - name: mongo-data
              persistentVolumeClaim:
                claimName: mongo-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongo-data
      name: mongo-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongo-express
      name: mongo-express
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongo-express
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: mongo-express
        spec:
          containers:
            - image: mongo-express
              name: mongo-express
              ports:
                - containerPort: 8081
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seq-logger
      name: seq-logger
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: seq-logger
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: seq-logger
        spec:
          containers:
            - env:
                - name: ACCEPT_EULA
                  value: "Y"
              image: datalust/seq
              name: seq-logger
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web-api
      name: web-api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web-api
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: web-api
        spec:
          containers:
            - image: web-api
              name: web-api
              ports:
                - containerPort: 9090
              resources: {}
              volumeMounts:
                - mountPath: /app/src
                  name: web-api-claim0
                - mountPath: /app/go.mod
                  name: web-api-claim1
                - mountPath: /app/go.sum
                  name: web-api-claim2
                - mountPath: /app/modd.conf
                  name: web-api-claim3
          restartPolicy: Always
          volumes:
            - name: web-api-claim0
              persistentVolumeClaim:
                claimName: web-api-claim0
            - name: web-api-claim1
              persistentVolumeClaim:
                claimName: web-api-claim1
            - name: web-api-claim2
              persistentVolumeClaim:
                claimName: web-api-claim2
            - name: web-api-claim3
              persistentVolumeClaim:
                claimName: web-api-claim3
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-api-claim0
      name: web-api-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-api-claim1
      name: web-api-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-api-claim2
      name: web-api-claim2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-api-claim3
      name: web-api-claim3
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web-ui
      name: web-ui
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web-ui
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yml -o kubemanifest.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: web-ui
        spec:
          containers:
            - image: web-ui
              name: web-ui
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

